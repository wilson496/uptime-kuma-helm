apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "uptime-kuma.fullname" . }}
  labels:
    {{- include "uptime-kuma.labels" . | nindent 4 }}
    {{- with .Values.statefulSet.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.statefulSet.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  serviceName: {{ template "uptime-kuma.fullname" . }}
  selector:
    matchLabels:
      {{- include "uptime-kuma.selectorLabels" . | nindent 6 }}
      {{- with .Values.commonLabels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "uptime-kuma.selectorLabels" . | nindent 8 }}
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "uptime-kuma.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "uptime-kuma.containerImage" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: UPTIME_KUMA_PORT
              value: '3001'
            - name: PORT
              value: '3001'
            {{- if .Values.extraCertificates.enabled }}
            - name: NODE_EXTRA_CA_CERTS
              value: /usr/local/share/ca-certificates/cacerts.pem
            {{- end }}
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          volumeMounts:
            - name: uptime-storage
              mountPath: /app/data
            {{- if .Values.extraCertificates.enabled }}
            - name: cacerts
              mountPath: /usr/local/share/ca-certificates/cacerts.pem
              subPath: cacerts.pem
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 25m
              memory: 50Mi
          readinessProbe:
            tcpSocket:
              port: 2020
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          terminationMessagePath: /dev/termination-log
          name: uptime-kuma-fluent-bit-sidecar
          livenessProbe:
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          ports:
            - name: metrics
              containerPort: 2020
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: log-storage
              mountPath: /mnt/log
            - name: flb-sc-config-volume
              mountPath: /fluent-bit/etc/
          terminationMessagePolicy: File
          image: 'artifacts.developer.gov.bc.ca/docker-remote/fluent/fluent-bit:1.5.7' 
      volumes:
        - name: flb-sc-config-volume
          configMap:
            name: uptime-kuma-flb-sc-config-map
            defaultMode: 420
        - name: log-storage
          persistentVolumeClaim:
            claimName: cron-log-storage-backup
        - name: uptime-storage
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "uptime-kuma.persistentVolumeClaimName" . }}
          {{- else }}
          emptyDir:
            sizeLimit: 4Gi
          {{- end }}
        {{- if .Values.extraCertificates.enabled }}
        - name: cacerts
          configMap:
            name: uptime-kuma-configmap
            items:
              - key: cacerts.pem
                path: cacerts.pem
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
